---
name: Push {{ DOCKER_IMAGE }}

on:
  push:
    branches:
      - main
    paths:
      - src/{{ DOCKER_IMAGE }}/*
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_OIDC_ROLE_ARN: {{ '${{ secrets.AWS_OIDC_ROLE_ARN }}' }}
  DOCKER_IMAGE_GROUP: {{ DOCKER_IMAGE_GROUP }}
  DOCKER_IMAGE: {{ DOCKER_IMAGE }}
  TZ: Asia/Singapore

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set shell options
        run: set -euxo pipefail

      - name: Setup qemu
        uses: docker/setup-qemu-action@v3

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: {{ '${{ env.AWS_OIDC_ROLE_ARN }}' }}
          role-session-name: aws-oidc-{{ '${{ github.repository.name }}' }}-{{ '${{ github.run_id }}' }}
          aws-region: {{ '${{ env.AWS_DEFAULT_REGION }}' }}

      - name: Login to AWS ECR Public Registry
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Extract Version from Dockerfile
        id: extract_version
        run: |
          DOCKER_IMAGE_TAG=$(sed -n 's/^FROM .*:\([^ -]*\).*/\1/p' ./src/{{ '${{ env.DOCKER_IMAGE }}' }}/Dockerfile)
          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG#v}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG#v}"

      - name: Create AWS ECR Public Repository
        run: |
          aws ecr-public create-repository --repository-name {{ '${{ env.DOCKER_IMAGE_GROUP }}' }}/{{ '${{ env.DOCKER_IMAGE }}' }} --region {{ '${{ env.AWS_DEFAULT_REGION }}' }} || true

      - name: Docker build & push
        uses: docker/bake-action@v5
        with:
          targets: push
          workdir: ./src/{{ '${{ env.DOCKER_IMAGE }}' }}

  run-push:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set shell options
        run: set -euxo pipefail

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: docs/requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: {{ '${{ env.AWS_OIDC_ROLE_ARN }}' }}
          role-session-name: aws-oidc-{{ '${{ github.repository.name }}' }}-{{ '${{ github.run_id }}' }}
          aws-region: {{ '${{ env.AWS_DEFAULT_REGION }}' }}

      - name: Login to AWS ECR Public Registry
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2

      - run: pip install -r requirements.txt
        working-directory: docs

      - name: Run Python script
        working-directory: docs
        run: python3 query-{{ '${{ env.DOCKER_IMAGE }}' }}-image.py

      - name: Commit and Update
        env:
          GITHUB_TOKEN: {{ '${{ secrets.GITHUB_TOKEN }}' }}
        run: |
          echo "Start."
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          git config pull.rebase false
          git checkout main
          git pull origin main
          git add ./src/{{ '${{ env.DOCKER_IMAGE }}' }}/readme.md
          git commit -m 'Automated documentation update [skip ci]' || echo "No changes to commit"

          if ! git push origin main; then
            echo "Push failed, trying git pull --rebase and push again..."
            git pull --rebase origin main
            git push origin main
